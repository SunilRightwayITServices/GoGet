// Generated by dagger.internal.codegen.ComponentProcessor (https://google.github.io/dagger).
package com.au.rightway.weatherforecast.modules.forecast;

import dagger.MembersInjector;
import javax.inject.Provider;

public final class WeatherForecastFragment_MembersInjector
    implements MembersInjector<WeatherForecastFragment> {
  private final Provider<WeatherForecastContract.Presenter> presenterProvider;

  public WeatherForecastFragment_MembersInjector(
      Provider<WeatherForecastContract.Presenter> presenterProvider) {
    assert presenterProvider != null;
    this.presenterProvider = presenterProvider;
  }

  public static MembersInjector<WeatherForecastFragment> create(
      Provider<WeatherForecastContract.Presenter> presenterProvider) {
    return new WeatherForecastFragment_MembersInjector(presenterProvider);
  }

  @Override
  public void injectMembers(WeatherForecastFragment instance) {
    if (instance == null) {
      throw new NullPointerException("Cannot inject members into a null reference");
    }
    instance.presenter = presenterProvider.get();
  }
}
